{"version":3,"sources":["components/imageGalleryItem/Imagegallery.module.css","components/button/Button.module.css","components/loader/Loader.module.css","components/modal/Modal.module.css","components/imageGallery/ImageGallery.module.css","components/searchBar/SearchBar.js","services/Services.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/button/Button.js","components/loader/Loader.js","components/modal/Modal.js","components/app/App.js","index.js","components/searchBar/SearchBar.module.css"],"names":["module","exports","Searchbar","onHandleSubmit","onSearchQueryChange","value","className","styles","SearchForm","onSubmit","type","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","placeholder","defaultProps","alert","baseUrl","page","key","requestParams","axiosRequest","searchQuery","pageNumber","axios","get","ImageGalleryItem","image","id","Date","now","webformatURL","largeImageURL","tags","onClick","e","src","data-url","alt","ImageGalleryItemImage","ImageGallery","ListRef","createRef","handleClick","current","target","props","onHandleClickOnImage","ref","this","images","map","Component","Button","onLoadMoreButtonClick","buttonWrapper","Load","loaderOverlay","loader","color","height","width","timeout","Modal","backdropRef","handleKeyPress","code","onCloseModal","handleBackdropClick","window","addEventListener","removeEventListener","Backdrop","largeURL","App","LisrRef","state","isLoading","isModalOpen","imageOpenedInModal","imagesRequest","setState","then","data","prevState","hits","catch","error","console","log","finally","handleSearchbarInputChange","handleSearchbarFormSubmit","preventDefault","handleLoadMoreButtonClick","handleClickOnImage","dataset","url","handleCloseModal","prevProps","Loader","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d400cb10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"Imagegallery_ImageGalleryItem__zIbpN\",\"ImageGalleryItemImage\":\"Imagegallery_ImageGalleryItemImage__1Z5Df\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"Button_buttonWrapper__c7lw_\",\"Button\":\"Button_Button__1dnIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderOverlay\":\"Loader_loaderOverlay__3ddxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Modal_Backdrop__3DCgf\",\"Modal\":\"Modal_Modal__pgsQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1cCEt\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./SearchBar.module.css\";\r\n\r\nconst Searchbar = ({ onHandleSubmit, onSearchQueryChange, value }) => (\r\n  <header className={styles.Searchbar}>\r\n    <form className={styles.SearchForm} onSubmit={onHandleSubmit}>\r\n      <button type=\"submit\" className={styles.SearchFormButton}>\r\n        <span className={styles.SearchFormButtonLabel}>Search</span>\r\n      </button>\r\n\r\n      <input\r\n        onChange={onSearchQueryChange}\r\n        className={styles.SearchFormInput}\r\n        type=\"text\"\r\n        value={value}\r\n        // autocomplete=\"off\"\r\n        // autofocus\r\n        placeholder=\"Search images and photos\"\r\n      />\r\n    </form>\r\n  </header>\r\n);\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n  onSearchQueryChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nSearchbar.defaultProps = {\r\n  onHandleSubmit: () => {\r\n    alert(\"Something went wrong... Try to reload this page\");\r\n  },\r\n  onSearchQueryChange: () => {\r\n    alert(\"Something went wrong... Try to reload this page\");\r\n  },\r\n  value: \"\",\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://pixabay.com/api/?q=\";\r\nconst page = \"&page=\";\r\nconst key = \"&key=19539896-abe26f00558e3a292a16c6b93\";\r\nconst requestParams = \"&image_type=photo&orientation=horizontal&per_page=12\";\r\n\r\nexport const axiosRequest = (searchQuery, pageNumber = 1) => {\r\n  return axios.get(\r\n    baseUrl + searchQuery + page + pageNumber + key + requestParams\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Imagegallery.module.css\";\r\n\r\nconst ImageGalleryItem = ({\r\n  image: {\r\n    id = Date.now,\r\n    webformatURL = \"https://www.gsb.stanford.edu/sites/gsb/files/resources/internetbroken_0.gif\",\r\n    largeImageURL = \"https://www.gsb.stanford.edu/sites/gsb/files/resources/internetbroken_0.gif\",\r\n    tags = \"image not found\",\r\n  },\r\n  onClick,\r\n}) => (\r\n  <li key={id} className={styles.ImageGalleryItem}>\r\n    <img\r\n      onClick={(e) => onClick(e)}\r\n      src={webformatURL}\r\n      data-url={largeImageURL}\r\n      alt={tags}\r\n      className={styles.ImageGalleryItemImage}\r\n    />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component, createRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../imageGalleryItem/ImageGalleryItem\";\r\nimport styles from \"./ImageGallery.module.css\";\r\n\r\nexport default class ImageGallery extends Component {\r\n  ListRef = createRef();\r\n\r\n  static propTypes = {\r\n    onHandleClickOnImage: PropTypes.func.isRequired,\r\n    images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        webformatURL: PropTypes.string.isRequired,\r\n        largeImageURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired,\r\n      }).isRequired\r\n    ).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onHandleClickOnImage: () => {\r\n      alert(\"Something went wrong... Try to reload this page\");\r\n    },\r\n    images: [],\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    if (this.ListRef.current && e.target === this.ListRef.current) return;\r\n    this.props.onHandleClickOnImage(e);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ul\r\n        className={styles.ImageGallery}\r\n        ref={this.ListRef}\r\n        onClick={this.handleClick}\r\n      >\r\n        {this.props.images.map((image) => (\r\n          <ImageGalleryItem\r\n            key={image.id}\r\n            image={image}\r\n            onClick={this.handleClick}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Button.module.css\";\r\nconst Button = ({ onLoadMoreButtonClick }) => (\r\n  <div className={styles.buttonWrapper}>\r\n    <button onClick={() => onLoadMoreButtonClick()} className={styles.Button}>\r\n      Load More\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onLoadMoreButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nButton.defaultProps = {\r\n  onLoadMoreButtonClick: () => {\r\n    alert(\"Something went wrong... Try to reload this page\");\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styles from \"./Loader.module.css\";\r\n\r\nconst Load = () => (\r\n  <div className={styles.loaderOverlay}>\r\n    <Loader\r\n      className={styles.loader}\r\n      type=\"Oval\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={10000}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Load;\r\n","import React, { Component, createRef } from \"react\";\r\nimport styles from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    onCloseModal: PropTypes.func.isRequired,\r\n    largeURL: PropTypes.string.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onCloseModal: () => {\r\n      alert(\"Something went wrong... Try to reload this page\");\r\n    },\r\n    largeURL:\r\n      \"https://www.gsb.stanford.edu/sites/gsb/files/resources/internetbroken_0.gif\",\r\n  };\r\n\r\n  backdropRef = createRef();\r\n\r\n  handleKeyPress = (e) => {\r\n    if (e.code !== \"Escape\") {\r\n      return;\r\n    }\r\n    this.props.onCloseModal();\r\n  };\r\n\r\n  handleBackdropClick = (e) => {\r\n    const { current } = this.backdropRef;\r\n    if (current && e.target !== current) return;\r\n    this.props.onCloseModal();\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={styles.Backdrop}\r\n        onClick={this.handleBackdropClick}\r\n        ref={this.backdropRef}\r\n      >\r\n        <img src={this.props.largeURL} alt=\"img\" className={styles.Modal} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, createRef } from \"react\";\r\nimport Searchbar from \"../searchBar/SearchBar\";\r\nimport { axiosRequest } from \"../../services/Services\";\r\nimport ImageGallery from \"../imageGallery/ImageGallery\";\r\nimport Button from \"../button/Button\";\r\nimport Loader from \"../loader/Loader\";\r\nimport Modal from \"../modal/Modal\";\r\n\r\nexport default class App extends Component {\r\n  LisrRef = createRef();\r\n\r\n  state = {\r\n    images: [],\r\n    searchQuery: \"\",\r\n    pageNumber: 1,\r\n    isLoading: false,\r\n    isModalOpen: false,\r\n    imageOpenedInModal: null,\r\n  };\r\n  //func to do reuest to PIXABAY and set state\r\n  imagesRequest = (\r\n    searchQuery = this.state.searchQuery,\r\n    pageNumber = this.state.pageNumber\r\n  ) => {\r\n    this.setState({ isLoading: true });\r\n    axiosRequest(searchQuery, pageNumber)\r\n      .then(({ data }) =>\r\n        this.setState((prevState) => {\r\n          return {\r\n            images: [...prevState.images, ...data.hits],\r\n            pageNumber: prevState.pageNumber + 1,\r\n          };\r\n        })\r\n      )\r\n      .catch((error) => console.log(error))\r\n      .finally(\r\n        this.setState({ isLoading: false })\r\n        //   window.scrollTo({\r\n        //     top: document.documentElement.scrollHeight,\r\n        //     behavior: \"smooth\",\r\n        //   })\r\n      );\r\n  };\r\n\r\n  // clear \"this.state.images\" & \"this.state.pageNumber\" if user input new request\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.setState({ images: [], pageNumber: 1 });\r\n    }\r\n  }\r\n\r\n  //set searchQuery into state\r\n  handleSearchbarInputChange = (e) => {\r\n    this.setState({ searchQuery: e.target.value });\r\n  };\r\n\r\n  //do reuest to PIXABAY and set state after submiting the form\r\n  handleSearchbarFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.imagesRequest();\r\n  };\r\n\r\n  //do reuest for the next page of images and set state after clicking the Load More Button\r\n  handleLoadMoreButtonClick = () => {\r\n    this.imagesRequest();\r\n  };\r\n\r\n  handleClickOnImage = (e) => {\r\n    this.setState({\r\n      isModalOpen: true,\r\n      imageOpenedInModal: e.target.dataset.url,\r\n    });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({\r\n      isModalOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      images,\r\n      searchQuery,\r\n      isLoading,\r\n      isModalOpen,\r\n      imageOpenedInModal,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar\r\n          value={searchQuery}\r\n          onHandleSubmit={this.handleSearchbarFormSubmit}\r\n          onSearchQueryChange={this.handleSearchbarInputChange}\r\n        />\r\n        {isLoading && <Loader />}\r\n        {images.length > 0 && (\r\n          <ImageGallery\r\n            ref={this.LisrRef}\r\n            onHandleClickOnImage={this.handleClickOnImage}\r\n            images={images}\r\n          />\r\n        )}\r\n        {images.length > 0 && (\r\n          <Button onLoadMoreButtonClick={this.handleLoadMoreButtonClick} />\r\n        )}\r\n        {isModalOpen && (\r\n          <Modal\r\n            largeURL={imageOpenedInModal}\r\n            onCloseModal={this.handleCloseModal}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__1qMp0\",\"SearchForm\":\"SearchBar_SearchForm__H5u3q\",\"SearchFormButton\":\"SearchBar_SearchFormButton__1EGrI\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__36BG3\",\"SearchFormInput\":\"SearchBar_SearchFormInput__2ifDS\"};"],"sourceRoot":""}